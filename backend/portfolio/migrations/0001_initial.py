# Generated by Django 5.1.6 on 2025-07-15 11:08

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Asset Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=10)),
                ('decimal_places', models.IntegerField(default=2)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_currency', models.CharField(db_index=True, max_length=3)),
                ('to_currency', models.CharField(db_index=True, max_length=3)),
                ('rate', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('date', models.DateField(db_index=True)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['from_currency', 'to_currency', '-date'], name='portfolio_e_from_cu_e8d809_idx'), models.Index(fields=['date', 'from_currency', 'to_currency'], name='portfolio_e_date_09a932_idx')],
                'unique_together': {('from_currency', 'to_currency', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_currency', models.CharField(default='USD', help_text='Base currency for this portfolio', max_length=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioCashAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cash_account', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioXIRRCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xirr_value', models.DecimalField(decimal_places=6, help_text='XIRR as decimal (e.g., 0.15 for 15%)', max_digits=10, null=True)),
                ('last_transaction_id', models.IntegerField(help_text='ID of last transaction used in calculation', null=True)),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='xirr_cache', to='portfolio.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('asset_type', models.CharField(default='REAL_ESTATE', max_length=50)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('purchase_date', models.DateField()),
                ('property_type', models.CharField(max_length=50)),
                ('size_sqft', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_assets', to='portfolio.portfolio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(db_index=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('security_type', models.CharField(choices=[('STOCK', 'Stock'), ('ETF', 'ETF'), ('CRYPTO', 'Cryptocurrency'), ('BOND', 'Bond'), ('MUTUAL_FUND', 'Mutual Fund'), ('COMMODITY', 'Commodity'), ('INDEX', 'Index'), ('OPTION', 'Option')], db_index=True, max_length=20)),
                ('exchange', models.CharField(blank=True, max_length=50)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('current_price', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('day_high', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('day_low', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('week_52_high', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('week_52_low', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('pe_ratio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dividend_yield', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sector', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('data_source', models.CharField(choices=[('yahoo', 'Yahoo Finance'), ('coingecko', 'CoinGecko'), ('manual', 'Manual Entry'), ('alpha_vantage', 'Alpha Vantage')], default='yahoo', max_length=20)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('strike_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('option_type', models.CharField(blank=True, choices=[('CALL', 'Call'), ('PUT', 'Put')], max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='portfolio.assetcategory')),
                ('underlying_security', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derivatives', to='portfolio.security')),
            ],
            options={
                'verbose_name_plural': 'Securities',
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(db_index=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('open_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('high_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('low_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('close_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('adjusted_close', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('data_source', models.CharField(default='yahoo', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('security', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='portfolio.security')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AssetXIRRCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xirr_value', models.DecimalField(decimal_places=6, help_text='XIRR as decimal (e.g., 0.15 for 15%)', max_digits=10, null=True)),
                ('last_transaction_id', models.IntegerField(help_text='ID of last transaction for this asset used in calculation', null=True)),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio')),
                ('security', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.security')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('DIVIDEND', 'Dividend'), ('SPLIT', 'Stock Split'), ('TRANSFER_IN', 'Transfer In'), ('TRANSFER_OUT', 'Transfer Out'), ('FEE', 'Fee'), ('INTEREST', 'Interest')], db_index=True, max_length=20)),
                ('transaction_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('settlement_date', models.DateTimeField(blank=True, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=8, default=Decimal('1'), help_text='Exchange rate to portfolio base currency at transaction date', max_digits=20)),
                ('base_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Total value in portfolio base currency', max_digits=20, null=True)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('price', models.DecimalField(decimal_places=8, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fees', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('dividend_per_share', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('split_ratio', models.CharField(blank=True, max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.portfolio')),
                ('security', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='portfolio.security')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CashTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal'), ('BUY', 'Security Purchase'), ('SELL', 'Security Sale'), ('DIVIDEND', 'Dividend Payment'), ('INTEREST', 'Interest Payment'), ('FEE', 'Fee'), ('TRANSFER_IN', 'Transfer In'), ('TRANSFER_OUT', 'Transfer Out'), ('SPLIT', 'Stock Split')], db_index=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Positive for inflows, negative for outflows', max_digits=20)),
                ('balance_after', models.DecimalField(decimal_places=2, help_text='Cash balance after this transaction', max_digits=20)),
                ('description', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('is_auto_deposit', models.BooleanField(default=False, help_text='True if this was an automatic deposit for insufficient funds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_transactions', to=settings.AUTH_USER_MODEL)),
                ('cash_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.portfoliocashaccount')),
                ('related_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cash_transaction', to='portfolio.transaction')),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_deposit_enabled', models.BooleanField(default=True, help_text='Automatically create deposits when buying with insufficient cash')),
                ('auto_deposit_mode', models.CharField(choices=[('EXACT', 'Deposit exact amount needed'), ('SHORTFALL', 'Deposit only the shortfall')], default='EXACT', max_length=20)),
                ('show_cash_warnings', models.BooleanField(default=True, help_text='Show warnings when cash balance is low')),
                ('default_currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Preferences',
            },
        ),
        migrations.AddIndex(
            model_name='security',
            index=models.Index(fields=['symbol', 'security_type'], name='portfolio_s_symbol_e8378f_idx'),
        ),
        migrations.AddIndex(
            model_name='security',
            index=models.Index(fields=['security_type', 'is_active'], name='portfolio_s_securit_196cd5_idx'),
        ),
        migrations.AddIndex(
            model_name='pricehistory',
            index=models.Index(fields=['security', 'date'], name='portfolio_p_securit_b03a7d_idx'),
        ),
        migrations.AddIndex(
            model_name='pricehistory',
            index=models.Index(fields=['date'], name='portfolio_p_date_287f29_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pricehistory',
            unique_together={('security', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='assetxirrcache',
            unique_together={('portfolio', 'security')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['portfolio', 'transaction_date'], name='portfolio_t_portfol_7a5ee5_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['security', 'transaction_type'], name='portfolio_t_securit_9898f8_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'transaction_date'], name='portfolio_t_user_id_ea82e4_idx'),
        ),
        migrations.AddIndex(
            model_name='cashtransaction',
            index=models.Index(fields=['cash_account', 'transaction_date'], name='portfolio_c_cash_ac_feafa2_idx'),
        ),
        migrations.AddIndex(
            model_name='cashtransaction',
            index=models.Index(fields=['transaction_type', 'transaction_date'], name='portfolio_c_transac_5b9b02_idx'),
        ),
    ]
